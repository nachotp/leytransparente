import requests
import urllib.request

from bs4 import BeautifulSoup

import json

import pymongo

"""myclient = pymongo.MongoClient("mongodb://localhost:27017/")
mydb = myclient["leytransparente"]

mycol = mydb["declaraciones"]

diputados = open("E:\Proyects\leytransparente\Obtencion de datos\Tagging de leyes\JsonInfoProbidad.json", encoding="utf-8")
data = json.load(diputados)
largos =[]
#f = open("declaraciones.txt", "w")
daata = {}
daata["declaraciones"]=[]
for diputado in data:
    url_declaracion = diputado["Declaracion"]["value"]
    response = requests.get(url_declaracion)
    soup = BeautifulSoup(response.text, "html.parser")
    declaracion = soup.findAll("span",{"property" : "dip:jsonCargado"})[0].text
    print(type(declaracion))
    declaracion = json.loads(declaracion)
    print(type(declaracion))
    x = mycol.insert_one(declaracion)
    #f.write(declaracion)
    #daata["declaraciones"].append(declaracion)
    #print(declaracion)
    #largos.append(len(declaracion))
#json.dump(daata,f, indent=4)
#f.close()
#print(largos)
#print(len(largos))
"""
def actual():
    myclient = pymongo.MongoClient(
        "mongodb+srv://admin:leytransparente@leytransparente-m6y51.mongodb.net/test?retryWrites"
        "=true&w=majority")
    mydb = myclient["leytransparente"]
    mycol = mydb["declaraciones"]

    newvalue = {"$set":{"Meta": bool(False)}}

    for x in mycol.find():
        print(x)
        if(x["Meta"] == bool(True)):
            print("ja")
            for y in mycol.find():
                print(y)
                if(x["_id"] != y["_id"]):
                    if(x["Datos_del_Declarante"]["nombre"] == y["Datos_del_Declarante"]["nombre"] and x['Datos_del_Declarante']['Apellido_Paterno'] == y['Datos_del_Declarante']['Apellido_Paterno'] and x['Datos_del_Declarante']['Apellido_Materno'] == y['Datos_del_Declarante']['Apellido_Materno']):
                        if(x["Fecha_de_la_Declaracion"]>y["Fecha_de_la_Declaracion"]):
                            query = {"_id" : y["_id"]}
                            mycol.update_one(query,newvalue)
                        else:
                            query = {"_id": x["_id"]}
                            mycol.update_one(query, newvalue)

actual()


